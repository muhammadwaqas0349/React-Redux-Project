{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  count: 0\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.count += 1;\n    },\n    decrement: state => {\n      state.count -= 1;\n    },\n    reset: state => {\n      state.count = 0;\n    },\n    incrementByAmount: (state, action) => {\n      state.count += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  reset,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/waqas-macbook/Desktop/react_redux_toolkit-main/src/features/counter/counterSlice.js"],"names":["createSlice","initialState","count","counterSlice","name","reducers","increment","state","decrement","reset","incrementByAmount","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,SAD8B;AAEpCH,EAAAA,YAFoC;AAGpCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAGC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACL,KAAN,IAAe,CAAf;AACH,KAHK;AAINM,IAAAA,SAAS,EAAGD,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACL,KAAN,IAAe,CAAf;AACH,KANK;AAONO,IAAAA,KAAK,EAAGF,KAAD,IAAW;AACdA,MAAAA,KAAK,CAACL,KAAN,GAAc,CAAd;AACH,KATK;AAUNQ,IAAAA,iBAAiB,EAAE,CAACH,KAAD,EAAQI,MAAR,KAAmB;AAClCJ,MAAAA,KAAK,CAACL,KAAN,IAAeS,MAAM,CAACC,OAAtB;AACH;AAZK;AAH0B,CAAD,CAAhC;AAmBP,OAAO,MAAM;AAAEN,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,IAAqDP,YAAY,CAACU,OAAxE;AAEP,eAAeV,YAAY,CAACW,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    count: 0\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state) => {\n            state.count += 1;\n        },\n        decrement: (state) => {\n            state.count -= 1;\n        },\n        reset: (state) => {\n            state.count = 0;\n        },\n        incrementByAmount: (state, action) => {\n            state.count += action.payload;\n        }\n    }\n});\n\nexport const { increment, decrement, reset, incrementByAmount } = counterSlice.actions;\n\nexport default counterSlice.reducer;"]},"metadata":{},"sourceType":"module"}